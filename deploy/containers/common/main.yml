---
- hosts: localhost

  become: "yes"

  vars:
    DRIVE_AUTHORIZATION:  "{{ lookup('env','FI_DRIVE_AUTHORIZATION') }}"
    machine: "{{ lookup('env','FI_GITLAB_MACHINE') }}"
    login: "{{ lookup('env','FI_GITLAB_LOGIN') }}"
    password:  "{{ lookup('env','FI_GITLAB_PASSWORD') }}"
    documentroot:  "{{ lookup('env','FI_DOCUMENTROOT') }}"

  tasks:
   - name: Incluir llaves de cifrado
     include_vars: vars/key.yml

   - name: Agregar netrc
     template:
      src: "vars/netrc.j2"
      dest: "/root/.netrc"
      mode: "0600"

   - name: Remover archivo index
     file:
      path: "/var/www/html"
      state: absent

   - name: Clonar repositorio integrates {{ lookup('env','CI_COMMIT_REF_NAME') }}
     git:
      repo: "https://gitlab.com/fluidsignal/integrates.git"
      dest: "/usr/src/app"
      version: "{{ lookup('env','CI_COMMIT_REF_NAME') }}"

   - name: Instalar Gema Asciidoctor
     command: >
      gem install asciidoctor-pdf --pre

   - name: Actualizar permisos
     file:
      path: "/usr/src/app/app/documentator/results"
      state: directory
      owner: "www-data"
      group: "www-data"
      mode: "0744"
      recurse: "yes"

   - name: Actualizar permisos
     file:
      path: "/usr/src/app/app/documentator/tpls"
      state: directory
      owner: "www-data"
      group: "www-data"
      mode: "0744"
      recurse: "yes"

   - name: Actualizar permisos
     file:
      path: "/usr/src/app/app/documentator/images"
      state: directory
      owner: "www-data"
      group: "www-data"
      mode: "0744"
      recurse: "yes"

   - name: Agregar drive authorization
     template:
      src: "vars/drive_authorization.j2"
      dest: "/usr/src/app/config/drive_authorization.json"
      mode: "0644"
      owner: www-data
      group: www-data

   - name: Establecer permisos directorio
     file:
      path: "{{ documentroot }}"
      owner: www-data
      group: www-data
      recurse: "yes"

   - name: Retirar git conf
     file:
      path: "/root/.netrc"
      state: absent
     register: gitconf

   - name: Execute makemigrate
     command: "/usr/src/app/manage.py makemigrations"
     when: gitconf
     register: makemigrate

   - name: Execute migrate
     command: "/usr/src/app/manage.py migrate"
     when: makemigrate
     register: migrate

   - name: Add crontab jobs
     command: "/usr/src/app/manage.py crontab add"
     when: migrate

   - name: Quitar mod python
     command: "a2dismod python"
     when: migrate

   - name: Habilitar mod_ssl
     command: "a2enmod ssl"
     when: migrate

   - name: Instala los paquetes de package.json.
     npm:
      path: "/usr/src/app/app/assets"

   - name: Creando sitio web HTTPS
     template:
      src: "vars/integrates-ssl.j2"
      dest: "/etc/apache2/sites-available/integrates-ssl.conf"
      mode: "0644"

   - name: Creando sitio web HTTP
     template:
      src: "vars/default.j2"
      dest: "/etc/apache2/sites-available/000-default.conf"
      mode: "0644"

   - name: Habilitar sitio integrates HTTPS
     command: "a2ensite integrates-ssl.conf"
     when: migrate

   - name: Habilitar sitio integrates HTTP
     command: "a2ensite 000-default.conf"
     when: migrate

   - name: Instalando certificado digital
     copy:
      content: '{{ ssl_cert }}'
      dest: /etc/ssl/certs/fluidla.crt
      owner: root
      group: root
      mode: 0644

   - name: Instalando llave privada ssl
     copy:
      content: '{{ ssl_key }}'
      dest: /etc/ssl/private/fluidla.key
      owner: root
      group: root
      mode: 0600
     notify:
      - reiniciar apache2

  handlers:
   - name: reiniciar apache2
     service:
      name: "apache2"
      state: "restarted"
