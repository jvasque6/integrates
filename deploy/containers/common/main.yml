---
- hosts: localhost

  become: "yes"

  tasks:
   - name: Incluir llaves de cifrado
     include_vars: vars/key.yml

   - name: include default step variables
     include_vars: vars/vars.yml

   - name: Instalar paquetes
     apt:
      pkg: "{{ item }}"
      state: installed
     register: dependencias
     with_items:
      - git
      - python-dev
      - python-pip
      - apache2
      - python-setuptools
      - python-tk
      - nodejs
      - build-essential

   - name: Instalar librerias
     apt:
      pkg: "{{ item }}"
      state: installed
     register: dependencias2
     with_items:
      - liblcms2-dev
      - libwebp-dev
      - tcl8.6-dev
      - tk8.6-dev
      - libxml2
      - libxml2-dev
      - libxslt1-dev
      - libapache2-mod-wsgi
      - libtiff5-dev
      - zlib1g-dev
      - libfreetype6-dev
      - libapache2-mod-python
      - libmysqlclient-dev
      - cron

   - name: Upgrade pip
     pip:
      name: "{{ item }}"
      extra_args: -U --force
     with_items:
      - pip

   - name: Instalar dependencias pip
     pip:
      name: "{{ item }}"
     with_items:
      - django
      - python-pptx
      - pyyaml
      - openpyxl
      - requests
      - lxml
      - decorators
      - retrying
      - social-auth-app-django
      - prospector
      - mysqlclient
      - django-sslserver
      - ansible
      - django-crontab
      - django-analytical
      - django-intercom
      - mandrill
      - python-magic
      - apiclient
      - httplib2
      - google-api-python-client
      - oauth2client
      - pytz
      - slackclient
      - boto3
      - watchtower
     register: installed_deps

   - name: Patch social auth module
     command: "python /root/patch_socialauth.py"
     when: installed_deps

   - name: Agregar netrc
     template:
      src: "vars/netrc.j2"
      dest: "/root/.netrc"
      mode: "0600"

   - name: Remover archivo index
     file:
      path: "/var/www/html"
      state: absent

   - name: Clonar repositorio integrates {{ lookup('env','CI_COMMIT_REF_NAME') }}
     git:
      repo: "https://gitlab.com/fluidsignal/integrates.git"
      dest: "/usr/src/app"
      version: "{{ lookup('env','CI_COMMIT_REF_NAME') }}"

   - name: Agregar secret vars
     template:
      src: "vars/settings.j2"
      dest: "/usr/src/app/fluidintegrates/settings.py"
      mode: "0644"

   - name: Agregar drive authorization
     template:
      src: "vars/drive_authorization.j2"
      dest: "/usr/src/app/config/drive_authorization.json"
      mode: "0644"
      owner: www-data
      group: www-data

   - name: Add Formstack API Keys
     lineinfile:
      path: "/usr/src/app/app/models.py"
      regexp: "^    ltokens="
      line: "{{FORMSTACK_TOKENS}}"

   - name: Establecer permisos directorio
     file:
      path: "{{ documentroot }}"
      owner: www-data
      group: www-data
      recurse: "yes"

   - name: Retirar git conf
     file:
      path: "/root/.netrc"
      state: absent
     register: gitconf

   - name: Execute makemigrate
     command: "/usr/src/app/manage.py makemigrations"
     when: gitconf
     register: makemigrate

   - name: Execute migrate
     command: "/usr/src/app/manage.py migrate"
     when: makemigrate
     register: migrate

   - name: Add crontab jobs
     command: "/usr/src/app/manage.py crontab add"
     when: migrate

   - name: Quitar mod python
     command: "a2dismod python"
     when: migrate

   - name: Habilitar mod_ssl
     command: "a2enmod ssl"
     when: migrate

   - name: Instala los paquetes de package.json.
     npm:
      path: "/usr/src/app/app/assets"

   - name: Creando sitio web HTTPS
     template:
      src: "vars/integrates-ssl.j2"
      dest: "/etc/apache2/sites-available/integrates-ssl.conf"
      mode: "0644"

   - name: Creando sitio web HTTP
     template:
      src: "vars/default.j2"
      dest: "/etc/apache2/sites-available/000-default.conf"
      mode: "0644"

   - name: Habilitar sitio integrates HTTPS
     command: "a2ensite integrates-ssl.conf"
     when: migrate

   - name: Habilitar sitio integrates HTTP
     command: "a2ensite 000-default.conf"
     when: migrate

   - name: Instalando certificado digital
     copy:
      content: '{{ ssl_cert }}'
      dest: /etc/ssl/certs/fluidla.crt
      owner: root
      group: root
      mode: 0644

   - name: Instalando llave privada ssl
     copy:
      content: '{{ ssl_key }}'
      dest: /etc/ssl/private/fluidla.key
      owner: root
      group: root
      mode: 0600
     notify:
      - reiniciar apache2

  handlers:
   - name: reiniciar apache2
     service:
      name: "apache2"
      state: "restarted"
