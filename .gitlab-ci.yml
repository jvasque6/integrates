image: docker:latest

variables:
  DOCKER_DRIVER: overlay2

services:
   - docker:dind


before_script:
    - echo $VAULT > deploy/containers/.vault.txt
    - sh env.sh
    - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASS

codequality:
  script:
    - docker pull codeclimate/codeclimate
    - docker run --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate analyze -e sonar-python -e pep8 -e randon -f json > codeclimate.json
  artifacts:
    paths: [codeclimate.json]

stages:
    - pretest
    - deps
    - build
    - test
    - deploy

build_pretest:
    stage: pretest
    script:
        - grep ^DEBUG fluidintegrates/settings.py | grep -q False

build_deps:
    stage: deps
    script:
        - docker build -t registry.gitlab.com/fluidsignal/integrates:deps deploy/containers/deps

build_integrates:
    stage: build
    script:
        - >
          cd deploy/containers/integrates && sh build.sh $CI_COMMIT_REF_NAME $FI_AWS_DYNAMODB_ACCESS_KEY $FI_AWS_DYNAMODB_SECRET_KEY
          $FI_DJANGO_SECRET_KEY $FI_DB_USER $FI_DB_PASSWD $FI_DB_HOST $FI_AWS_CLOUDWATCH_ACCESS_KEY $FI_AWS_CLOUDWATCH_SECRET_KEY $FI_MIXPANEL_API_TOKEN $FI_INTERCOM_APPID $FI_INTERCOM_SECURE_KEY $FI_SLACK_BOT_TOKEN
          $FI_GOOGLE_OAUTH2_KEY $FI_GOOGLE_OAUTH2_SECRET $FI_AZUREAD_OAUTH2_KEY $FI_AZUREAD_OAUTH2_SECRET $FI_DRIVE_AUTHORIZATION $FI_FORMSTACK_TOKENS $FI_AWS_OUTPUT $FI_DEBUG $FI_ROLLBAR_ACCESS_TOKEN
        - docker push registry.gitlab.com/fluidsignal/integrates:base

build_bot:
    stage: build
    script:
        - >
          cd deploy/containers/bot && sh build.sh $CI_COMMIT_REF_NAME $FI_AWS_DYNAMODB_ACCESS_KEY $FI_AWS_DYNAMODB_SECRET_KEY
          $FI_DJANGO_SECRET_KEY $FI_DB_USER $FI_DB_PASSWD $FI_DB_HOST $FI_AWS_CLOUDWATCH_ACCESS_KEY $FI_AWS_CLOUDWATCH_SECRET_KEY $FI_MIXPANEL_API_TOKEN $FI_INTERCOM_APPID $FI_INTERCOM_SECURE_KEY $FI_SLACK_BOT_TOKEN
          $FI_GOOGLE_OAUTH2_KEY $FI_GOOGLE_OAUTH2_SECRET $FI_AZUREAD_OAUTH2_KEY $FI_AZUREAD_OAUTH2_SECRET $FI_DRIVE_AUTHORIZATION $FI_FORMSTACK_TOKENS $FI_AWS_OUTPUT $FI_DEBUG $FI_ROLLBAR_ACCESS_TOKEN
        - docker push registry.gitlab.com/fluidsignal/integrates/bot:base

manage:
    stage: test
    script:
        - docker pull registry.gitlab.com/fluidsignal/integrates:base
        - docker run --env-file env.list -t registry.gitlab.com/fluidsignal/integrates:base python /usr/src/app/manage.py test app.tests
        - rm env.list

Prospector_app:
    stage: test
    script:
        - docker pull registry.gitlab.com/fluidsignal/integrates:base
        - docker run --env-file env.list -t registry.gitlab.com/fluidsignal/integrates:base prospector -u django /usr/src/app/app
        - rm env.list

Prospector_fluidintegrates:
    stage: test
    script:
        - docker pull registry.gitlab.com/fluidsignal/integrates:base
        - docker run --env-file env.list -t registry.gitlab.com/fluidsignal/integrates:base prospector -u django /usr/src/app/fluidintegrates
        - rm env.list

deploy_integrates:
    stage: deploy
    script:
        - docker pull registry.gitlab.com/fluidsignal/integrates:base
        - docker tag registry.gitlab.com/fluidsignal/integrates:base registry.gitlab.com/fluidsignal/integrates:master
        - docker push registry.gitlab.com/fluidsignal/integrates:master
    only:
    - master

deploy_bot:
    stage: deploy
    script:
        - docker pull registry.gitlab.com/fluidsignal/integrates/bot:base
        - docker tag registry.gitlab.com/fluidsignal/integrates/bot:base registry.gitlab.com/fluidsignal/integrates/bot:master
        - docker push registry.gitlab.com/fluidsignal/integrates/bot:master
    only:
    - master
