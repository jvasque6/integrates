image: docker:17

variables:
  DOCKER_DRIVER: overlay2

services:
   - docker:dind

before_script:
    - sh env.sh

after_script:
    - rm env.sh

codequality:
  script:
    - docker pull codeclimate/codeclimate
    - docker run --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate analyze -e sonar-python -e pep8 -e randon -f json > codeclimate.json || true
  artifacts:
    paths: [codeclimate.json]

stages:
    - pretest
    - deps
    - build
    - test
    - push
    - deploy

build_pretest:
    stage: pretest
    script:
        - grep ^DEBUG fluidintegrates/settings.py | grep -q False

build_deps:
    stage: deps
    script:
        - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASS
        - docker build --cache-from registry.gitlab.com/fluidsignal/integrates:deps -t registry.gitlab.com/fluidsignal/integrates:deps deploy/containers/deps
        - docker push registry.gitlab.com/fluidsignal/integrates:deps
    except:
    - triggers

build_integrates:
    stage: build
    script:
        - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASS
        - >
          cd deploy/containers/integrates && sh build.sh $CI_COMMIT_REF_NAME $FI_GITLAB_LOGIN $FI_GITLAB_PASSWORD $FI_DRIVE_AUTHORIZATION $FI_DOCUMENTROOT $FI_SSL_CERT $FI_SSL_KEY $FI_DRIVE_AUTHORIZATION_CLIENT
        - docker push registry.gitlab.com/fluidsignal/integrates:base
    except:
    - triggers

build_bot:
    stage: build
    script:
        - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASS
        - >
          cd deploy/containers/bot && sh build.sh $CI_COMMIT_REF_NAME $FI_GITLAB_LOGIN $FI_GITLAB_PASSWORD $FI_DRIVE_AUTHORIZATION $FI_DOCUMENTROOT $FI_SSL_CERT $FI_SSL_KEY $FI_DRIVE_AUTHORIZATION_CLIENT
        - docker push registry.gitlab.com/fluidsignal/integrates/bot:base
    except:
    - triggers

server_on:
    stage: build
    script:
        - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASS
        - docker stop integrates_test && docker rm integrates_test || true
        - docker network rm integrates_test || true
        - docker network create --subnet=192.168.200.0/24 integrates_test
        - docker run -d --name "integrates_test" --env-file env.list --network integrates_test --ip 192.168.200.100 -p 8000:8000 -t registry.gitlab.com/fluidsignal/integrates:base python /usr/src/app/manage.py runserver 0.0.0.0:8000
    except:
    - triggers

manage:
    stage: test
    script:
        - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASS
        - docker run --env-file env.list -t registry.gitlab.com/fluidsignal/integrates:base python /usr/src/app/manage.py test app.tests
        - rm env.list
    except:
    - triggers

fluidasserts:
    stage: test
    script:
        - docker login fluid-docker.jfrog.io -u $CONTINUOUS_USER -p $CONTINUOUS_PASS
        - docker run --network integrates_test -e ORG=fluid -e APP=integrates -e USER=$CONTINUOUS_USER -e PASS=$CONTINUOUS_PASS -e FA_STRICT="false" fluid-docker.jfrog.io/fluid:integrates
    except:
    - triggers

Prospector_app:
    stage: test
    script:
        - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASS
        - docker run --env-file env.list -t registry.gitlab.com/fluidsignal/integrates:base prospector -u django /usr/src/app/app
        - rm env.list
    except:
    - triggers

Prospector_fluidintegrates:
    stage: test
    script:
        - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASS
        - docker run --env-file env.list -t registry.gitlab.com/fluidsignal/integrates:base prospector -u django /usr/src/app/fluidintegrates
        - rm env.list
    except:
    - triggers

server_off:
    stage: deploy
    script:
        - docker stop integrates_test && docker rm integrates_test
        - docker network rm integrates_test
    except:
    - triggers

push_integrates:
    stage: push
    script:
       - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASS
       - docker pull registry.gitlab.com/fluidsignal/integrates:base
       - docker tag registry.gitlab.com/fluidsignal/integrates:base registry.gitlab.com/fluidsignal/integrates:master
       - docker push registry.gitlab.com/fluidsignal/integrates:master
    only:
    - master
    except:
    - triggers

push_bot:
    stage: push
    script:
        - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASS
        - docker pull registry.gitlab.com/fluidsignal/integrates/bot:base
        - docker tag registry.gitlab.com/fluidsignal/integrates/bot:base registry.gitlab.com/fluidsignal/integrates/bot:master
        - docker push registry.gitlab.com/fluidsignal/integrates/bot:master
    only:
    - master
    except:
    - triggers

deploy_integrates:
    stage: deploy
    image: debian:jessie-slim
    script:
       - echo "$FI_SSH_KEY" | base64 -d > "FLUID_Serves.pem" && chmod 600 FLUID_Serves.pem
       - apt update && apt install -y openssh-client
       - scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i FLUID_Serves.pem env.list admin@fluidattacks.com:/home/admin
       - ssh -o StrictHostKeyChecking=no -i FLUID_Serves.pem admin@fluidattacks.com 'sudo docker pull registry.gitlab.com/fluidsignal/integrates:master && sudo docker stop integrates && sudo docker rm integrates && sudo docker run -d --env-file env.list -p 8000:443 --name=integrates registry.gitlab.com/fluidsignal/integrates:master'
       - ssh -o StrictHostKeyChecking=no -i FLUID_Serves.pem admin@fluidattacks.com 'sudo docker pull registry.gitlab.com/fluidsignal/integrates/bot:master && sudo docker stop bot && sudo docker rm bot && sudo docker run -d --env-file env.list --restart always --name=bot registry.gitlab.com/fluidsignal/integrates/bot:master && rm env.list'
    only:
    - master
    except:
    - triggers

deploy_rollbar:
    stage: deploy
    script:
        - docker run -d -e FI_ROLLBAR_ACCESS_TOKEN=$FI_ROLLBAR_ACCESS_TOKEN -e FI_ROLLBAR_ENVIRONMENT=$FI_ROLLBAR_ENVIRONMENT -e FI_ROLLBAR_REVISION=$CI_COMMIT_SHA -e FI_ROLLBAR_LOCAL_USERNAME=$CI_COMMIT_REF_NAME registry.gitlab.com/fluidsignal/integrates:deps curl https://api.rollbar.com/api/1/deploy/ -F access_token=$FI_ROLLBAR_ACCESS_TOKEN -F environment=$FI_ROLLBAR_ENVIRONMENT -F revision=$CI_COMMIT_SHA -F local_username=$CI_COMMIT_REF_NAME
    only:
    - master
    except:
    - triggers

serves_trigger:
    stage: deploy
    image: debian:jessie-slim
    script:
        - apt update && apt install -y openssh-client curl
        - echo "$FI_SSH_KEY" | base64 -d > "FLUID_Serves.pem" && chmod 600 FLUID_Serves.pem
        - scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i FLUID_Serves.pem env.list admin@$NEW_SERVES:/home/admin
        - ssh -o StrictHostKeyChecking=no -i FLUID_Serves.pem admin@$NEW_SERVES 'sudo docker pull registry.gitlab.com/fluidsignal/integrates:master && (sudo docker stop integrates || echo "") && (sudo docker rm integrates || echo "") && sudo docker run -d --env-file env.list -p 8000:443 --name=integrates registry.gitlab.com/fluidsignal/integrates:master'
        - ssh -o StrictHostKeyChecking=no -i FLUID_Serves.pem admin@$NEW_SERVES 'sudo docker pull registry.gitlab.com/fluidsignal/integrates/bot:master && (sudo docker stop bot || echo "") && (sudo docker rm bot || echo "") && sudo docker run -d --env-file env.list --restart always --name=bot registry.gitlab.com/fluidsignal/integrates/bot:master && rm env.list'
        - curl -X POST -F token=$TRIGGER_TOKEN -F ref=master -F "variables[IS_TRIGGER]=true" https://gitlab.com/api/v4/projects/4593051/trigger/pipeline
    only:
    - triggers
